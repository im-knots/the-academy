version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: academy-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: academy_user
      POSTGRES_PASSWORD: academy_password
      POSTGRES_DB: academy_db
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./migrations/0001_initial_schema.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/00-init.sh:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U academy_user -d academy_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: academy-pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@academy.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres-data:
    driver: local
  pgadmin-data:
    driver: local

networks:
  default:
    name: academy-network